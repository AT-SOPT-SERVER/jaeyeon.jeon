plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'or.sopt'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1")
    set('querydslVersion', "5.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // Spring Security OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // open feign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    //querydsl 설정 추가
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// querydsl QClass 파일 생성 위치 지정
def generated = file("src/main/generated")

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = generated
}

// java source set에 querydsl QClass 위치 추가
sourceSets {
    main {
        java {
            srcDir generated
        }
    }
}

// gradle clean 시 QClass 디렉토리 삭제
clean {
    delete generated
}

tasks.named('test') {
    useJUnitPlatform()
}
